name: CI for Backend and Frontend

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

jobs:
  # --- TRABALHO PARA O BACKEND .NET ---
  backend-ci:
    name: Backend CI (.NET)
    runs-on: ubuntu-latest
    
    permissions:
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
          
      - name: Restore Dependencies
        run: |
          dotnet restore Backend/SkillLearning.Api/SkillLearning.Api.csproj
          dotnet restore Backend/SkillLearning.Workers.EmailSender/SkillLearning.Workers.EmailSender.csproj
          dotnet restore Backend/SkillLearning.Tests/SkillLearning.Tests.csproj
          
      - name: Build Application
        run: |
          dotnet build Backend/SkillLearning.Api/SkillLearning.Api.csproj --no-restore --configuration Release
          dotnet build Backend/SkillLearning.Workers.EmailSender/SkillLearning.Workers.EmailSender.csproj --no-restore --configuration Release
      
      - name: Run Tests & Collect Coverage
        run: dotnet test Backend/SkillLearning.Tests/SkillLearning.Tests.csproj --no-build --configuration Release --collect:"XPlat Code Coverage"
      
      - name: Install ReportGenerator tool
        run: dotnet tool install --global dotnet-reportgenerator-globaltool
      
      - name: Generate Coverage Report
        run: |
          reportgenerator \
          "-reports:${{ github.workspace }}/Backend/SkillLearning.Tests/TestResults/**/coverage.cobertura.xml" \
          "-targetdir:${{ github.workspace }}/coveragereport" \
          "-reporttypes:Html;MarkdownSummary"

      - name: Add Coverage Comment to PR
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: coverage-backend 
          path: ${{ github.workspace }}/coveragereport/Summary.md
          
  frontend-ci:
    name: Frontend CI (React)
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./Frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' 
          cache: 'npm'
          cache-dependency-path: Frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Lint check
        run: npm run lint

      - name: Build for production
        run: npm run build